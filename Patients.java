package com.mycompany.hms;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.*;
import java.util.*;
import javax.swing.table.*;

/**
 *
 * @author pmmurshidha
 */
public class Patients extends javax.swing.JFrame {

    /**
     * Creates new form Patients
     */

// Database connection information static variable declaration
private static final String USERNAME = "root";
private static final String PWD = "Murshidha";
private static final String CONSTR = "jdbc:mysql://localhost:3306/hms";

// Connection, Prepared Statement and resultset Objects declaration
Connection dbcon = null;
PreparedStatement ps = null;
ResultSet rs = null;

// Int variable declaration
int columnCount;        // To get the column count from the Jtable
int i;                  // For loop initialization variable
int selectedPatientID;  // Variable to get the selected record ID from the Jtable
int deleteItem;         // To get the record ID of the record to be deleted


// Constructor which will be called automatically when we run the Patients class
// Include all methods which has to be exectued when we run the patients class
    public Patients() {
        initComponents();
        
        try{
        loadPatientList();
        }catch (Exception ex){
        System.out.println(ex);
        }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    // My Code for patient listing - Start (pmmurshidha)
    public void loadPatientList() throws SQLException{
        
        // Connect to the MYSQL Database
        try {Class.forName("com.mysql.cj.jdbc.Driver");
        dbcon = DriverManager.getConnection(CONSTR,USERNAME,PWD);
        
        // Declare the SQL Query
        String sqlQuery = "select `PATIENT_ID`, `PATIENT_NAME`,`PATIENT_MOBILE_NO`,`PATIENT_GENDER`,`PATIENT_AGE`,`PATIENT_CITY`, `PATIENT_PINCODE`, `PATIENT_STATE`,`PATIENT_ADDRESS` FROM hms.patients ";
        
        // Prepare the statement for the query
        ps = dbcon.prepareStatement(sqlQuery);
        
        // Run the query and get the result from database
        rs = ps.executeQuery();  
        
        // Print whether Database gets connected
        System.out.println("Database Connected for listing Patients...");
        
        // To populate the result set collected from the database into JTable
        ResultSetMetaData stData = rs.getMetaData();
        columnCount = stData.getColumnCount();
        DefaultTableModel tblPatient = (DefaultTableModel) jTable2.getModel();
        tblPatient.setRowCount(0);
         
        while (rs.next()){
            Vector columnData = new Vector();
                for (i=1;  i<=columnCount; i++)
                    {
                    columnData.add(rs.getInt("PATIENT_ID" ));
                    columnData.add(rs.getString("PATIENT_NAME"));
                    columnData.add(rs.getString("PATIENT_MOBILE_NO"));
                    columnData.add(rs.getString("PATIENT_GENDER"));
                    columnData.add(rs.getString("PATIENT_AGE"));
                    columnData.add(rs.getString("PATIENT_ADDRESS"));
                    columnData.add(rs.getString("PATIENT_CITY"));
                    columnData.add(rs.getString("PATIENT_PINCODE"));
                    columnData.add(rs.getString("PATIENT_STATE"));
                    }
                   tblPatient.addRow(columnData);
    }        
        }
    
        // catch(ClassNotFoundException | SQLException e){ System.out.println(e);}
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        lblPatientID = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtPatientMobileNo = new javax.swing.JTextField();
        txtPatientState = new javax.swing.JTextField();
        txtPatientID = new javax.swing.JTextField();
        txtPatientGender = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        txtPatientAddress = new javax.swing.JTextField();
        txtPatientCity = new javax.swing.JTextField();
        txtPatientPincode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtPatientName = new javax.swing.JTextField();
        lblPatientName = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        BtnAdd = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnMainMenu = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Patient Information");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(794, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1000, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient ID", " Name", "Mobile No", "Gender", "Age", "Address", "City", "Pincode", "State"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 980, 200));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1000, 220));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPatientID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPatientID.setText("Patient ID:");
        jPanel3.add(lblPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Patient Mobile No:");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Patient Gender:");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Patient Address:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Patient City:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Patient Pincode:");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Patient State:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Patient Age:");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));
        jPanel3.add(txtPatientMobileNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, 380, -1));

        txtPatientState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientStateActionPerformed(evt);
            }
        });
        jPanel3.add(txtPatientState, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 260, 380, -1));

        txtPatientID.setEditable(false);
        txtPatientID.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 380, -1));

        txtPatientGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientGenderActionPerformed(evt);
            }
        });
        jPanel3.add(txtPatientGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 110, 380, -1));

        txtPatientAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAgeActionPerformed(evt);
            }
        });
        jPanel3.add(txtPatientAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 380, -1));

        txtPatientAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientAddressActionPerformed(evt);
            }
        });
        jPanel3.add(txtPatientAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 380, -1));

        txtPatientCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientCityActionPerformed(evt);
            }
        });
        jPanel3.add(txtPatientCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, 380, -1));

        txtPatientPincode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientPincodeActionPerformed(evt);
            }
        });
        jPanel3.add(txtPatientPincode, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, 380, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, -180, -1, 170));
        jPanel3.add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 380, -1));

        lblPatientName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblPatientName.setText("Patient Name:");
        jPanel3.add(lblPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 780, 310));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnAdd.setBackground(new java.awt.Color(0, 255, 255));
        BtnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnAdd.setText("Add Patient");
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });
        jPanel4.add(BtnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 29, 120, -1));

        btnModify.setBackground(new java.awt.Color(0, 255, 255));
        btnModify.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnModify.setText("Modify Patient");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });
        jPanel4.add(btnModify, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 81, 120, -1));

        btnDelete.setBackground(new java.awt.Color(0, 255, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete.setText("Delete Patient");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel4.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 132, 120, -1));

        btnClear.setBackground(new java.awt.Color(0, 255, 255));
        btnClear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel4.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 120, -1));

        btnExit.setBackground(new java.awt.Color(255, 0, 0));
        btnExit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel4.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 120, -1));

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 280, 220, 310));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Hospital Management System");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, -1, -1));

        btnMainMenu.setText("Go to Main Menu");
        btnMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainMenuActionPerformed(evt);
            }
        });
        getContentPane().add(btnMainMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 0, 150, -1));

        setSize(new java.awt.Dimension(1029, 650));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddActionPerformed
       
        // Code to add new patient
    
        try {
        
        // To define the jdbc connection class
        Class.forName("com.mysql.cj.jdbc.Driver");
        
        // Get connection from datbase
        dbcon = DriverManager.getConnection(CONSTR,USERNAME,PWD);
        
        // Declare the insert script query from text fields.
        String sqlQuery = "insert into hms.patients (PATIENT_NAME, PATIENT_MOBILE_NO, PATIENT_GENDER, PATIENT_AGE, PATIENT_ADDRESS, PATIENT_CITY, PATIENT_PINCODE, PATIENT_STATE) value (?,?,?,?,?,?,?,?)";
        
        // Prepare the prepare statement for the above query
        ps = dbcon.prepareStatement(sqlQuery);
        
        // Print whether Database gets connected
        System.out.println("DB Connected for Adding Patient...");
        
        // Collect the text values from the controls and assign it into Prepare statement 
        ps.setString(1, txtPatientName.getText());
        ps.setString(2, txtPatientMobileNo.getText());
        ps.setString(3, txtPatientGender.getText());
        ps.setString(4, txtPatientAge.getText());
        ps.setString(5, txtPatientAddress.getText());
        ps.setString(6, txtPatientCity.getText());
        ps.setString(7, txtPatientPincode.getText());
        ps.setString(8, txtPatientState.getText());
        
        // Execute the Prepared Statement
        ps.executeUpdate();
        
        // Print whether insert into database completed
        System.out.println("INSERT Completed...");
        
        // Print a message after insert completed
        JOptionPane.showMessageDialog(this, "Patient added successfully.");
        
        // To clear all the textfields after inserting the data
        txtPatientName.setText("");
        txtPatientMobileNo.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtPatientAddress.setText("");
        txtPatientCity.setText("");
        txtPatientPincode.setText("");
        txtPatientState.setText("");
        txtPatientID.setText("");
        
        // To the set cursor focus on the Patient Name after delete a record
        txtPatientName.requestFocus();

        // To load the patients list in the table after every new add...
        loadPatientList();

        }
        catch (HeadlessException | ClassNotFoundException | SQLException ex)
        {
            JOptionPane.showMessageDialog(null, ex);
     
    }//GEN-LAST:event_BtnAddActionPerformed

    }
    
    
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        
        // To clear all the text fields 
        txtPatientName.setText("");
        txtPatientMobileNo.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtPatientAddress.setText("");
        txtPatientCity.setText("");
        txtPatientPincode.setText("");
        txtPatientState.setText("");
        txtPatientID.setText("");
        
        // To the set cursor focus on the Doctor Name after delete a record
        txtPatientName.requestFocus();
        
        // To unselect the selected record in the Jtable 
        jTable2.clearSelection();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtPatientStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientStateActionPerformed

    private void txtPatientGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientGenderActionPerformed

    private void txtPatientAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAgeActionPerformed

    private void txtPatientAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientAddressActionPerformed

    private void txtPatientCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientCityActionPerformed

    private void txtPatientPincodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientPincodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientPincodeActionPerformed

   
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        
        // Code for Exit button click to show alert message 
        jFrame1 = new JFrame("Exit");
        if (JOptionPane.showConfirmDialog(jFrame1, "Do you want to exit?", "Patient Information",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION)
        {
            System.exit(0);
        }
    
    }//GEN-LAST:event_btnExitActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        
        // When we select a record from the Jtable, populate the column value on the text controls
        // Define the model for JTable
        DefaultTableModel tblPatient = (DefaultTableModel) jTable2.getModel();
        int selectedRows = jTable2.getSelectedRow();
        
        // Selected row column values are populated on the text fields
        txtPatientID.setText(tblPatient.getValueAt(selectedRows, 0).toString());
        txtPatientName.setText(tblPatient.getValueAt(selectedRows, 1).toString());
        txtPatientMobileNo.setText(tblPatient.getValueAt(selectedRows, 2).toString());
        txtPatientGender.setText(tblPatient.getValueAt(selectedRows, 3).toString());
        txtPatientAge.setText(tblPatient.getValueAt(selectedRows, 4).toString());
        txtPatientAddress.setText(tblPatient.getValueAt(selectedRows, 5).toString());
        txtPatientCity.setText(tblPatient.getValueAt(selectedRows, 6).toString());
        txtPatientPincode.setText(tblPatient.getValueAt(selectedRows, 7).toString());
        txtPatientState.setText(tblPatient.getValueAt(selectedRows, 8).toString());
        
     
    }//GEN-LAST:event_jTable2MouseClicked

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        
        // Code for modifying a selected patient 
        // When we select a record from the Jtable, populate the column value on the text controls
        // Define the model for JTable for columns
        DefaultTableModel tblPatient = (DefaultTableModel) jTable2.getModel();
        int selectedRows = jTable2.getSelectedRow();
            
        try {
        
        // Get the selected Patient ID from the selected row from JTable
        // This ID is used to modify the record in the database
        selectedPatientID = Integer.parseInt(tblPatient.getValueAt(selectedRows, 0).toString());
        
        // Connect to the database
        Class.forName("com.mysql.cj.jdbc.Driver");
        dbcon = DriverManager.getConnection(CONSTR,USERNAME,PWD);
        
        // Define the database update query 
        String sqlQuery = "update Patients set PATIENT_NAME =?, PATIENT_MOBILE_NO=?, PATIENT_GENDER=?, PATIENT_AGE=?, PATIENT_ADDRESS=?, PATIENT_CITY=?, PATIENT_PINCODE=?, PATIENT_STATE=? where patient_id = ?";
        
        // Get the object for Prepared Statement for the above query
        ps = dbcon.prepareStatement(sqlQuery);
        
        // Print whether database connected
        System.out.println("Database Connected for modifying the selected Patient...");
        
        // set the modified values from the text fields into the prepared statment object
        ps.setString(1, txtPatientName.getText());
        ps.setString(2, txtPatientMobileNo.getText());
        ps.setString(3, txtPatientGender.getText());
        ps.setString(4, txtPatientAge.getText());
        ps.setString(5, txtPatientAddress.getText());
        ps.setString(6, txtPatientCity.getText());
        ps.setString(7, txtPatientPincode.getText());
        ps.setString(8, txtPatientState.getText());
        ps.setInt(9, selectedPatientID);
     
        // Print the selected Patient ID
        System.out.println ("The Value of Patient ID is ");
        System.out.println (selectedPatientID);
        
        // Execute the preparedstatement update query
        ps.executeUpdate();
        System.out.println("Modify Completed...");
        
        // Show a message for modification completed
        JOptionPane.showMessageDialog(this, "Patient modified successfully.");

        // To load the patients list in the table after every modify patient..
        loadPatientList();
        
        // To clear all the textfields after modifying the selected record
        txtPatientName.setText("");
        txtPatientMobileNo.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtPatientAddress.setText("");
        txtPatientCity.setText("");
        txtPatientPincode.setText("");
        txtPatientState.setText("");
        txtPatientID.setText("");
        
        // To the set cursor focus on the Patient Name after MODIFY a record
        txtPatientName.requestFocus();
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            ex.printStackTrace();
        }                                      

    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        // Code for deleting a selected patient 
        // When we select a record from the Jtable, populate the column value on the text controls
        // Define the model for JTable for columns
        
        DefaultTableModel tblPatient = (DefaultTableModel) jTable2.getModel();
        int selectedRows = jTable2.getSelectedRow();
        
        try {
        
        // get the selected Patient ID from the Jtable model object
        selectedPatientID = Integer.parseInt(tblPatient.getValueAt(selectedRows, 0).toString());
        
        // Define the confirmation message dialog box and get the YES or NO option
        deleteItem = JOptionPane.showConfirmDialog(null, "Do you want to delete this record", "Warning", JOptionPane.YES_NO_OPTION);
        
        if (deleteItem == JOptionPane.YES_OPTION)  
        {
        
        // Get the database connection
        Class.forName("com.mysql.cj.jdbc.Driver");
        dbcon = DriverManager.getConnection(CONSTR,USERNAME,PWD);
        
        // Define the delete query
        String sqlQuery = "delete from Patients where PATIENT_ID = ?";
                    
        // Create prepared statement object for delete query
        ps = dbcon.prepareStatement(sqlQuery);
                
        // Print whether database connected for deleting the selected record
        System.out.println("Database connected for deleting the Patient...");
        
        // Set the prepared statement object values for deletion
        ps.setInt(1, selectedPatientID);

        // Print the selected Patient ID 
        System.out.println ("The Value of Patient ID is ");
        System.out.println (selectedPatientID);
        
        // Execute the prepared statement object
        ps.executeUpdate();
        
        // To clear all the textfields after deleting the selected record
        txtPatientName.setText("");
        txtPatientMobileNo.setText("");
        txtPatientGender.setText("");
        txtPatientAge.setText("");
        txtPatientAddress.setText("");
        txtPatientCity.setText("");
        txtPatientPincode.setText("");
        txtPatientState.setText("");
        txtPatientID.setText("");
        
        // To the set cursor focus on the Patient Name after delete a record
        txtPatientName.requestFocus();
        
        // Print once delete completed
        System.out.println("Delete Completed...");
        
        // To show an information message to the user that record has been deleted.
        JOptionPane.showMessageDialog(this, "Patient deleted successfully.");

        // To load the patients list in the table after every delete
        loadPatientList();
}
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null, ex);
            ex.printStackTrace();
        }  
         
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainMenuActionPerformed
        // TODO add your handling code here:
        MenuScreen m = new MenuScreen();
        m.setVisible(true);
        
        dispose(); // To close Patient window
        
    }//GEN-LAST:event_btnMainMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patients.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Patients().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnMainMenu;
    private javax.swing.JButton btnModify;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblPatientID;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JTextField txtPatientAddress;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientCity;
    private javax.swing.JTextField txtPatientGender;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientMobileNo;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientPincode;
    private javax.swing.JTextField txtPatientState;
    // End of variables declaration//GEN-END:variables

}
